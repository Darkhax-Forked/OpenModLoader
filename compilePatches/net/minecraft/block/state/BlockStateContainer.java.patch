--- /net/minecraft/block/state
+++ /net/minecraft/block/state
@@ -65,7 +65,7 @@
 
       this.properties = ImmutableSortedMap.copyOf(var3);
       LinkedHashMap var11 = Maps.newLinkedHashMap();
-      ArrayList var12 = Lists.newArrayList();
+      ArrayList<BlockStateContainer.a> var12 = Lists.newArrayList();
 
       for(List var8 : Cartesian.cartesianProduct(this.getAllowedValues())) {
          Map var9 = MapPopulator.createMap(this.properties.values(), var8);
@@ -86,7 +86,7 @@
       if(!NAME_PATTERN.matcher(var2).matches()) {
          throw new IllegalArgumentException("Block: " + var0.getClass() + " has invalidly named property: " + var2);
       } else {
-         for(Comparable var4 : var1.getAllowedValues()) {
+         for(T var4 : var1.getAllowedValues()) {
             String var5 = var1.getName(var4);
             if(!NAME_PATTERN.matcher(var5).matches()) {
                throw new IllegalArgumentException("Block: " + var0.getClass() + " has property: " + var2 + " with invalidly named value: " + var5);
@@ -193,8 +193,8 @@
          } else {
             HashBasedTable var2 = HashBasedTable.create();
 
-            for(Entry var4 : this.properties.entrySet()) {
-               IProperty var5 = (IProperty)var4.getKey();
+            for(Entry<IProperty<?>, Comparable<?>> var4 : this.properties.entrySet()) {
+               IProperty<?> var5 = (IProperty)var4.getKey();
 
                for(Comparable var7 : var5.getAllowedValues()) {
                   if(var7 != var4.getValue()) {
